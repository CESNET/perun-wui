<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- PERUN -->
	<groupId>cz.metacentrum.perun</groupId>
	<artifactId>wui</artifactId>
	<version>3.2.1</version>
	<packaging>pom</packaging>

	<!-- PERUN MODULES -->
	<modules>
		<module>perun-wui-core</module>
		<module>perun-wui-admin</module>
		<module>perun-wui-cabinet</module>
		<module>perun-wui-registrar</module>
		<module>perun-wui-consolidator</module>
		<module>perun-wui-pwdreset</module>
		<module>perun-wui-profile</module>
		<module>perun-wui-setAffiliation</module>
	</modules>

	<!-- common environmental and version properties-->
	<properties>

		<!-- USE UTF-8 in whole project -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Project wide GWT version -->
		<gwtVersion>2.9.0</gwtVersion>
		<gwtPluginVersion>2.9.0</gwtPluginVersion>
		<gwtp.version>1.6</gwtp.version>
		<gin.version>2.1.2</gin.version>
		<!-- used GWT version supports only java version up to 11 -->
		<java.version>11</java.version>
	</properties>

	<!-- DEFAULT MAVEN BUILD SETTINGS

	 - child modules inherits settings (e.g. version, encoding), not plugin usage itself
	 - to explicitly use one of listed plugins in module just specify groupId and artifactId in it's plugins section for each plugin
	 - child module can override any setting of plugin by defining value in child module (or it's profile)
	 - beware, that default action on plugins configurations, executions etc. is MERGE !!
	 - if merged values are defined in both (parent and child module), than module value if used

	-->
	<build>

		<!-- by default we build + install artifact in local repository -->
		<defaultGoal>install</defaultGoal>

		<!-- Common plugin settings is inherited by child modules -->
		<pluginManagement>

			<plugins>

				<!-- mvn clean - cleans output folder (target) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>

				<!-- mvn compile - compile as Java 1.7 app in UTF-8 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<verbose>false</verbose>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>

				<!-- mvn install - build artifact and install it in local repository (.m2 folder) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>


				<!-- mvn javadoc - creates javadoc from source (we do append spring javadoc if found) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>

				<!-- mvn source:jar - packages sources -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.1</version>
				</plugin>

				<!-- mvn jar:jar - creates final jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>

				<!-- mvn jar:jar - creates final war -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.3.1</version>
				</plugin>

				<!-- mvn shade - creates shaded jar (1 jar containing e.g. core + spring) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.2.4</version>
				</plugin>

				<!-- plugin used to apply jUnit tests settings in maven and to generate report (target/surefire-reports)-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version>
					<configuration>
						<!-- disable logging for maven's tests / Test in you IDE will log normally -->
						<argLine>-Dlog4j.configuration=</argLine>
						<testFailureIgnore>false</testFailureIgnore>
						<skip>false</skip>
					</configuration>
				</plugin>

				<!-- Copy dependencies plug-in -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>

				<!-- Executing plug-in: mvn exec:java -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.6.0</version>
				</plugin>

			</plugins>

		</pluginManagement>

	</build>

	<!-- DEFAULT MAVEN DEPENDENCY SETTINGS

	 - child modules inherits settings (e.g. version, scope), not dependency itself
	 - to explicitly use one of listed dependencies in module just specify groupId and artifactId in it's dependencies section
	 - child module can override any setting by defining value in child module (or it's profile)
	 - beware, that default action on dependency configuration is MERGE !!
	 - if merged values are defined in both (parent and child module), than module value if used

	-->
	<dependencyManagement>
		<dependencies>

			<!-- LOGGING -->

			<!-- OTHERS -->

			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-user</artifactId>
				<version>${gwtVersion}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-dev</artifactId>
				<version>${gwtVersion}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-webapp</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-servlets</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-annotations</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>apache-jsp</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Use newer Jetty version than provided by GWT-dev,
			     since it doesn't support all GWT and libs on Java 11 in super-dev mode -->
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>9.4.34.v20201102</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlets</artifactId>
				<version>9.4.34.v20201102</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-annotations</artifactId>
				<version>9.4.34.v20201102</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>apache-jsp</artifactId>
				<version>9.4.34.v20201102</version>
				<scope>provided</scope>
			</dependency>

			<!-- GWT Bootstrap 3 -->

			<dependency>
				<groupId>org.gwtbootstrap3</groupId>
				<artifactId>gwtbootstrap3</artifactId>
				<version>1.0.1</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.gwtbootstrap3</groupId>
				<artifactId>gwtbootstrap3-extras</artifactId>
				<version>1.0.1</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>com.google.gwt.inject</groupId>
				<artifactId>gin</artifactId>
				<version>${gin.version}</version>
			</dependency>

			<dependency>
				<groupId>com.gwtplatform</groupId>
				<artifactId>gwtp-mvp-client</artifactId>
				<version>${gwtp.version}</version>
				<scope>provided</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>sonatype-nexus-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>sonatype-nexus-snapshots2</id>
			<url>http://oss.sonatype.org/content/repositories/google-snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>

	<!-- Perun project info -->
	<name>perun-wui</name>
	<description>Web interface for Perun using GWT and Bootstrap3.</description>

	<organization>
		<name>CESNET, z.s.p.o.</name>
		<url>http://www.cesnet.cz/</url>
	</organization>

	<inceptionYear>2014</inceptionYear>

	<url>http://perun.cesnet.cz/web/</url>

	<scm>
		<connection>scm:git:https://github.com/zlamalp/perun-wui.git</connection>
		<url>scm:git:https://github.com/zlamalp/perun-wui.git</url>
		<developerConnection>scm:git:https://github.com/zlamalp/perun-wui.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

</project>
